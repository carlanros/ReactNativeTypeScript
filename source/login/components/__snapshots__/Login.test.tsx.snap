// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components Login should render self and subcomponents 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Main />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Login
        </Text>,
        <TextInput
          allowFontScaling={true}
          autoFocus={true}
          keyboardType="email-address"
          onChangeText={[Function]}
          placeholder="Username"
        />,
      ],
      "style": Array [
        Object {
          "alignItems": "center",
          "bottom": 0,
          "justifyContent": "center",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "backgroundColor": "#ffffff",
        },
        Object {
          "padding": 10,
        },
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "Login",
          "ellipsizeMode": "tail",
        },
        "ref": null,
        "rendered": "Login",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "allowFontScaling": true,
          "autoFocus": true,
          "keyboardType": "email-address",
          "onChangeText": [Function],
          "placeholder": "Username",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            Login
          </Text>,
          <TextInput
            allowFontScaling={true}
            autoFocus={true}
            keyboardType="email-address"
            onChangeText={[Function]}
            placeholder="Username"
          />,
        ],
        "style": Array [
          Object {
            "alignItems": "center",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "backgroundColor": "#ffffff",
          },
          Object {
            "padding": 10,
          },
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Login",
            "ellipsizeMode": "tail",
          },
          "ref": null,
          "rendered": "Login",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "allowFontScaling": true,
            "autoFocus": true,
            "keyboardType": "email-address",
            "onChangeText": [Function],
            "placeholder": "Username",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
