// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components AppNavigator should render self and subcomponents 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppNavigator />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <View>
        <UNDEFINED>
          <View
            hideNavBar={true}
            transitionConfig={[Function]}
          >
            <UNDEFINED>
              <UNDEFINED
                hideNavBar={true}
                titleStyle={
                  Object {
                    "alignSelf": "center",
                  }
                }
              >
                <View
                  component={[Function]}
                  initial={true}
                  title="Start"
                />
              </UNDEFINED>
              <View
                component={[Function]}
                hideNavBar={true}
              />
            </UNDEFINED>
          </View>
        </UNDEFINED>
      </View>,
      "createReducer": [Function],
      "getSceneStyle": [Function],
      "uriPrefix": "myapp://",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": "root",
      "nodeType": "host",
      "props": Object {
        "children": <UNDEFINED>
          <View
            hideNavBar={true}
            transitionConfig={[Function]}
          >
            <UNDEFINED>
              <UNDEFINED
                hideNavBar={true}
                titleStyle={
                  Object {
                    "alignSelf": "center",
                  }
                }
              >
                <View
                  component={[Function]}
                  initial={true}
                  title="Start"
                />
              </UNDEFINED>
              <View
                component={[Function]}
                hideNavBar={true}
              />
            </UNDEFINED>
          </View>
        </UNDEFINED>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": "overlay",
        "nodeType": "function",
        "props": Object {
          "children": <View
            hideNavBar={true}
            transitionConfig={[Function]}
          >
            <UNDEFINED>
              <UNDEFINED
                hideNavBar={true}
                titleStyle={
                  Object {
                    "alignSelf": "center",
                  }
                }
              >
                <View
                  component={[Function]}
                  initial={true}
                  title="Start"
                />
              </UNDEFINED>
              <View
                component={[Function]}
                hideNavBar={true}
              />
            </UNDEFINED>
          </View>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": "modal",
          "nodeType": "host",
          "props": Object {
            "children": <UNDEFINED>
              <UNDEFINED
                hideNavBar={true}
                titleStyle={
                  Object {
                    "alignSelf": "center",
                  }
                }
              >
                <View
                  component={[Function]}
                  initial={true}
                  title="Start"
                />
              </UNDEFINED>
              <View
                component={[Function]}
                hideNavBar={true}
              />
            </UNDEFINED>,
            "hideNavBar": true,
            "transitionConfig": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": "lightbox",
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <UNDEFINED
                  hideNavBar={true}
                  titleStyle={
                    Object {
                      "alignSelf": "center",
                    }
                  }
                >
                  <View
                    component={[Function]}
                    initial={true}
                    title="Start"
                  />
                </UNDEFINED>,
                <View
                  component={[Function]}
                  hideNavBar={true}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "root",
                "nodeType": "function",
                "props": Object {
                  "children": <View
                    component={[Function]}
                    initial={true}
                    title="Start"
                  />,
                  "hideNavBar": true,
                  "titleStyle": Object {
                    "alignSelf": "center",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "main",
                  "nodeType": "host",
                  "props": Object {
                    "component": [Function],
                    "initial": true,
                    "title": "Start",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "View",
                },
                "type": undefined,
              },
              Object {
                "instance": null,
                "key": "login",
                "nodeType": "host",
                "props": Object {
                  "component": [Function],
                  "hideNavBar": true,
                },
                "ref": null,
                "rendered": null,
                "type": "View",
              },
            ],
            "type": undefined,
          },
          "type": "View",
        },
        "type": undefined,
      },
      "type": "View",
    },
    "type": "View",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <View>
          <UNDEFINED>
            <View
              hideNavBar={true}
              transitionConfig={[Function]}
            >
              <UNDEFINED>
                <UNDEFINED
                  hideNavBar={true}
                  titleStyle={
                    Object {
                      "alignSelf": "center",
                    }
                  }
                >
                  <View
                    component={[Function]}
                    initial={true}
                    title="Start"
                  />
                </UNDEFINED>
                <View
                  component={[Function]}
                  hideNavBar={true}
                />
              </UNDEFINED>
            </View>
          </UNDEFINED>
        </View>,
        "createReducer": [Function],
        "getSceneStyle": [Function],
        "uriPrefix": "myapp://",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": "root",
        "nodeType": "host",
        "props": Object {
          "children": <UNDEFINED>
            <View
              hideNavBar={true}
              transitionConfig={[Function]}
            >
              <UNDEFINED>
                <UNDEFINED
                  hideNavBar={true}
                  titleStyle={
                    Object {
                      "alignSelf": "center",
                    }
                  }
                >
                  <View
                    component={[Function]}
                    initial={true}
                    title="Start"
                  />
                </UNDEFINED>
                <View
                  component={[Function]}
                  hideNavBar={true}
                />
              </UNDEFINED>
            </View>
          </UNDEFINED>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": "overlay",
          "nodeType": "function",
          "props": Object {
            "children": <View
              hideNavBar={true}
              transitionConfig={[Function]}
            >
              <UNDEFINED>
                <UNDEFINED
                  hideNavBar={true}
                  titleStyle={
                    Object {
                      "alignSelf": "center",
                    }
                  }
                >
                  <View
                    component={[Function]}
                    initial={true}
                    title="Start"
                  />
                </UNDEFINED>
                <View
                  component={[Function]}
                  hideNavBar={true}
                />
              </UNDEFINED>
            </View>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": "modal",
            "nodeType": "host",
            "props": Object {
              "children": <UNDEFINED>
                <UNDEFINED
                  hideNavBar={true}
                  titleStyle={
                    Object {
                      "alignSelf": "center",
                    }
                  }
                >
                  <View
                    component={[Function]}
                    initial={true}
                    title="Start"
                  />
                </UNDEFINED>
                <View
                  component={[Function]}
                  hideNavBar={true}
                />
              </UNDEFINED>,
              "hideNavBar": true,
              "transitionConfig": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": "lightbox",
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <UNDEFINED
                    hideNavBar={true}
                    titleStyle={
                      Object {
                        "alignSelf": "center",
                      }
                    }
                  >
                    <View
                      component={[Function]}
                      initial={true}
                      title="Start"
                    />
                  </UNDEFINED>,
                  <View
                    component={[Function]}
                    hideNavBar={true}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "root",
                  "nodeType": "function",
                  "props": Object {
                    "children": <View
                      component={[Function]}
                      initial={true}
                      title="Start"
                    />,
                    "hideNavBar": true,
                    "titleStyle": Object {
                      "alignSelf": "center",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": "main",
                    "nodeType": "host",
                    "props": Object {
                      "component": [Function],
                      "initial": true,
                      "title": "Start",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "View",
                  },
                  "type": undefined,
                },
                Object {
                  "instance": null,
                  "key": "login",
                  "nodeType": "host",
                  "props": Object {
                    "component": [Function],
                    "hideNavBar": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "View",
                },
              ],
              "type": undefined,
            },
            "type": "View",
          },
          "type": undefined,
        },
        "type": "View",
      },
      "type": "View",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
