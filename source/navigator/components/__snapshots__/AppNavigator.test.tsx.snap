// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components AppNavigator should render self and subcomponents 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppNavigator />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <View
        hideNavBar={true}
        panHandlers={null}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <UNDEFINED
          activeTintColor="#fede00"
          lazy={true}
          showLabel={true}
          tabBarComponent={undefined}
          tabBarStyle={
            Object {
              "backgroundColor": "#057dc2",
              "flex": 1,
            }
          }
        >
          <View
            back={false}
            component={[Function]}
            icon={[Function]}
            tabBarLabel="Start"
            tintColor="#fede00"
            title="Start"
            titleStyle={
              Object {
                "alignSelf": "center",
                "color": "green",
              }
            }
          />
          <View
            back={false}
            component={[Function]}
            icon={[Function]}
            tabBarLabel="Start2"
            tintColor="#fede00"
            title="Start2"
          />
        </UNDEFINED>
      </View>,
      "createReducer": [Function],
      "uriPrefix": "myapp://",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": "root",
      "nodeType": "host",
      "props": Object {
        "children": <UNDEFINED
          activeTintColor="#fede00"
          lazy={true}
          showLabel={true}
          tabBarComponent={undefined}
          tabBarStyle={
            Object {
              "backgroundColor": "#057dc2",
              "flex": 1,
            }
          }
        >
          <View
            back={false}
            component={[Function]}
            icon={[Function]}
            tabBarLabel="Start"
            tintColor="#fede00"
            title="Start"
            titleStyle={
              Object {
                "alignSelf": "center",
                "color": "green",
              }
            }
          />
          <View
            back={false}
            component={[Function]}
            icon={[Function]}
            tabBarLabel="Start2"
            tintColor="#fede00"
            title="Start2"
          />
        </UNDEFINED>,
        "hideNavBar": true,
        "panHandlers": null,
        "style": Object {
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": "tabbar",
        "nodeType": "function",
        "props": Object {
          "activeTintColor": "#fede00",
          "children": Array [
            <View
              back={false}
              component={[Function]}
              icon={[Function]}
              tabBarLabel="Start"
              tintColor="#fede00"
              title="Start"
              titleStyle={
                Object {
                  "alignSelf": "center",
                  "color": "green",
                }
              }
            />,
            <View
              back={false}
              component={[Function]}
              icon={[Function]}
              tabBarLabel="Start2"
              tintColor="#fede00"
              title="Start2"
            />,
          ],
          "lazy": true,
          "showLabel": true,
          "tabBarComponent": undefined,
          "tabBarStyle": Object {
            "backgroundColor": "#057dc2",
            "flex": 1,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "main",
            "nodeType": "host",
            "props": Object {
              "back": false,
              "component": [Function],
              "icon": [Function],
              "tabBarLabel": "Start",
              "tintColor": "#fede00",
              "title": "Start",
              "titleStyle": Object {
                "alignSelf": "center",
                "color": "green",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "View",
          },
          Object {
            "instance": null,
            "key": "main2",
            "nodeType": "host",
            "props": Object {
              "back": false,
              "component": [Function],
              "icon": [Function],
              "tabBarLabel": "Start2",
              "tintColor": "#fede00",
              "title": "Start2",
            },
            "ref": null,
            "rendered": null,
            "type": "View",
          },
        ],
        "type": undefined,
      },
      "type": "View",
    },
    "type": "View",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <View
          hideNavBar={true}
          panHandlers={null}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <UNDEFINED
            activeTintColor="#fede00"
            lazy={true}
            showLabel={true}
            tabBarComponent={undefined}
            tabBarStyle={
              Object {
                "backgroundColor": "#057dc2",
                "flex": 1,
              }
            }
          >
            <View
              back={false}
              component={[Function]}
              icon={[Function]}
              tabBarLabel="Start"
              tintColor="#fede00"
              title="Start"
              titleStyle={
                Object {
                  "alignSelf": "center",
                  "color": "green",
                }
              }
            />
            <View
              back={false}
              component={[Function]}
              icon={[Function]}
              tabBarLabel="Start2"
              tintColor="#fede00"
              title="Start2"
            />
          </UNDEFINED>
        </View>,
        "createReducer": [Function],
        "uriPrefix": "myapp://",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": "root",
        "nodeType": "host",
        "props": Object {
          "children": <UNDEFINED
            activeTintColor="#fede00"
            lazy={true}
            showLabel={true}
            tabBarComponent={undefined}
            tabBarStyle={
              Object {
                "backgroundColor": "#057dc2",
                "flex": 1,
              }
            }
          >
            <View
              back={false}
              component={[Function]}
              icon={[Function]}
              tabBarLabel="Start"
              tintColor="#fede00"
              title="Start"
              titleStyle={
                Object {
                  "alignSelf": "center",
                  "color": "green",
                }
              }
            />
            <View
              back={false}
              component={[Function]}
              icon={[Function]}
              tabBarLabel="Start2"
              tintColor="#fede00"
              title="Start2"
            />
          </UNDEFINED>,
          "hideNavBar": true,
          "panHandlers": null,
          "style": Object {
            "flex": 1,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": "tabbar",
          "nodeType": "function",
          "props": Object {
            "activeTintColor": "#fede00",
            "children": Array [
              <View
                back={false}
                component={[Function]}
                icon={[Function]}
                tabBarLabel="Start"
                tintColor="#fede00"
                title="Start"
                titleStyle={
                  Object {
                    "alignSelf": "center",
                    "color": "green",
                  }
                }
              />,
              <View
                back={false}
                component={[Function]}
                icon={[Function]}
                tabBarLabel="Start2"
                tintColor="#fede00"
                title="Start2"
              />,
            ],
            "lazy": true,
            "showLabel": true,
            "tabBarComponent": undefined,
            "tabBarStyle": Object {
              "backgroundColor": "#057dc2",
              "flex": 1,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "main",
              "nodeType": "host",
              "props": Object {
                "back": false,
                "component": [Function],
                "icon": [Function],
                "tabBarLabel": "Start",
                "tintColor": "#fede00",
                "title": "Start",
                "titleStyle": Object {
                  "alignSelf": "center",
                  "color": "green",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "View",
            },
            Object {
              "instance": null,
              "key": "main2",
              "nodeType": "host",
              "props": Object {
                "back": false,
                "component": [Function],
                "icon": [Function],
                "tabBarLabel": "Start2",
                "tintColor": "#fede00",
                "title": "Start2",
              },
              "ref": null,
              "rendered": null,
              "type": "View",
            },
          ],
          "type": undefined,
        },
        "type": "View",
      },
      "type": "View",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
